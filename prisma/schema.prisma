// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  SELLER
}

model User {
  id         Int            @id @default(autoincrement())
  username   String         @unique
  password   String
  role       Role           @default(USER)
  email      String         @unique
  name       String
  cpf        String         @unique
  category   Category?      @relation(fields: [categoryId], references: [id])
  categoryId Int?
  orders     CommandOrder[]
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  price           Float
  stock           Int               @default(0)
  CommandProducts CommandProducts[]
  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      Int
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String?
  products Product[]
  sellers  User[]
}

model Command {
  id            Int            @id @default(autoincrement())
  value         Float          @default(0)
  name          String?
  orders        Order[]
  productOrders CommandOrder[]
}

model CommandProducts {
  order     CommandOrder @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product      @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int

  @@id([orderId, productId])
}

enum Status {
  OK
  CANCELLED
}

model CommandOrder {
  id        Int               @id @default(autoincrement())
  command   Command           @relation(fields: [commandId], references: [id])
  commandId Int
  seller    User              @relation(fields: [sellerId], references: [id])
  sellerId  Int
  orderedAt DateTime          @default(now())
  products  CommandProducts[]
  value     Float
  status    Status            @default(OK)
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
}

model Order {
  id        Int         @id @default(autoincrement())
  command   Command     @relation(fields: [commandId], references: [id])
  commandId Int
  value     Float
  orderedAt DateTime    @default(now())
  status    OrderStatus @default(PENDING)
}
